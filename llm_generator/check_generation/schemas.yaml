# Check Generation Schemas - Section 3 Data Structures
# YAML schema definitions for Section 3 implementation models

ExecutableCheck:
  type: object
  description: Generated executable check with Python code and validation results
  properties:
    check_id:
      type: string
      description: Unique check identifier
      example: "OWASP-2021-A01-001-github-repo"
    
    name:
      type: string
      description: Human readable check name
      example: "Branch Protection Check - GitHub Repo"
    
    description:
      type: string
      description: Check description and purpose
      
    benchmark_check_id:
      type: string
      description: Source benchmark check ID
      example: "OWASP-2021-A01-001"
    
    provider:
      type: string
      enum: ["github", "aws", "azure", "google"]
      description: Cloud provider
    
    resource_type:
      type: string
      description: Resource type
      example: "repo"
    
    python_code:
      type: string
      description: Generated Python check function
      example: |
        def check_branch_protection(resource):
            branches = resource.get("basic_info", {}).get("branches", [])
            for branch in branches:
                if branch.get("name") == "main":
                    if not branch.get("protected", False):
                        return {"status": "FAIL", "message": "Main branch is not protected"}
            return {"status": "PASS", "message": "Main branch is protected"}
    
    function_name:
      type: string
      description: Name of the generated Python function
      example: "check_branch_protection"
    
    input_schema:
      type: object
      description: Expected resource object structure
    
    field_paths_used:
      type: array
      items:
        type: string
      description: Resource field paths used in logic
      example: ["basic_info.branches", "basic_info.branches.name", "basic_info.branches.protected"]
    
    validation_status:
      type: string
      enum: ["PASS", "FAIL", "ERROR", "UNABLE_TO_GENERATE", "PENDING"]
      description: Overall validation status
    
    validation_results:
      type: array
      items:
        $ref: "#/ValidationResult"
      description: All validation attempts
    
    repair_attempts:
      type: integer
      default: 0
      description: Number of repair attempts made
    
    repair_context:
      $ref: "#/RepairContext"
      description: Repair context if failed
    
    generated_at:
      type: string
      format: date-time
      description: When the check was generated
    
    validated_at:
      type: string
      format: date-time
      description: When validation completed
    
    saved_to_db:
      type: boolean
      default: false
      description: Whether saved to database
    
    control_ids:
      type: array
      items:
        type: integer
      description: Mapped control IDs for database

ValidationResult:
  type: object
  description: Results from validating a check against real resources
  properties:
    check_id:
      type: string
      description: Unique check identifier
    
    provider:
      type: string
      description: Cloud provider
    
    resource_type:
      type: string
      description: Resource type
    
    total_resources:
      type: integer
      description: Total resources evaluated
    
    passed_count:
      type: integer
      description: Number of resources that passed
    
    failed_count:
      type: integer
      description: Number of resources that failed
    
    error_count:
      type: integer
      description: Number of resources with execution errors
    
    execution_results:
      type: array
      items:
        $ref: "#/ExecutionResult"
      description: Detailed per-resource results
    
    validation_timestamp:
      type: string
      format: date-time
      description: When validation was performed

ExecutionResult:
  type: object
  description: Individual execution result from resource validation
  properties:
    resource_id:
      type: string
      description: Unique identifier for the resource
    
    status:
      type: string
      enum: ["PASS", "FAIL", "ERROR"]
      description: Execution status
    
    message:
      type: string
      description: Human readable message
    
    error:
      type: string
      description: Error details if failed
    
    execution_time_ms:
      type: integer
      description: Execution time in milliseconds

RepairContext:
  type: object
  description: Context information for repairing failed checks
  properties:
    check_id:
      type: string
      description: Check being repaired
    
    attempt_number:
      type: integer
      description: Current repair attempt (1-based)
    
    max_attempts:
      type: integer
      description: Maximum allowed repair attempts
    
    validation_results:
      type: array
      items:
        $ref: "#/ValidationResult"
      description: All validation attempts
    
    error_patterns:
      type: array
      items:
        type: string
      description: Common error patterns identified
    
    suggested_fixes:
      type: array
      items:
        type: string
      description: LLM suggested improvements
    
    field_path_issues:
      type: array
      items:
        type: string
      description: Identified field path problems

GenerationTask:
  type: object
  description: Task definition for generating executable checks
  properties:
    benchmark_check:
      $ref: "../benchmark/schemas.yaml#/Check"
      description: Source benchmark check metadata
    
    provider:
      type: string
      description: Target cloud provider
    
    resource_type:
      type: string
      description: Target resource type
    
    field_paths:
      type: array
      items:
        type: string
      description: Available resource field paths
    
    task_id:
      type: string
      description: Unique task identifier
    
    created_at:
      type: string
      format: date-time
      description: When the task was created

ImplementationCoverage:
  type: object
  description: Coverage metrics for Section 3 implementation success
  properties:
    # Input metrics
    total_benchmark_checks:
      type: integer
      description: Total benchmark checks processed
    
    total_generation_tasks:
      type: integer
      description: Total provider-resource tasks generated
    
    # Generation metrics
    successfully_generated:
      type: integer
      description: Checks with valid Python code generated
    
    generation_failures:
      type: integer
      description: Checks that failed initial code generation
    
    # Validation metrics
    validation_passes:
      type: integer
      description: Checks that passed validation on first try
    
    validation_failures:
      type: integer
      description: Checks that failed initial validation
    
    # Repair metrics
    repair_attempts_made:
      type: integer
      description: Total repair attempts across all checks
    
    successful_repairs:
      type: integer
      description: Checks successfully repaired
    
    unable_to_repair:
      type: integer
      description: Checks that couldn't be repaired after max attempts
    
    # Database metrics
    saved_to_database:
      type: integer
      description: Checks successfully saved to database
    
    database_errors:
      type: integer
      description: Database insertion failures
    
    # Coverage percentages
    coverage_percentages:
      type: object
      properties:
        generation:
          type: number
          description: Percentage of tasks with generated code
        validation:
          type: number
          description: Percentage of tasks that passed validation
        database_save:
          type: number
          description: Percentage of tasks saved to database
        overall_success:
          type: number
          description: Overall success rate
    
    # Provider breakdown
    provider_breakdown:
      type: object
      additionalProperties:
        type: object
        properties:
          total:
            type: integer
          successful:
            type: integer
          failed:
            type: integer
      description: Success/failure by provider
    
    # Error analysis
    common_errors:
      type: object
      additionalProperties:
        type: integer
      description: Most common error types and counts
    
    # Timing metrics
    total_processing_time_seconds:
      type: number
      description: Total processing time
    
    average_check_processing_time:
      type: number
      description: Average time per check

Section3Results:
  type: object
  description: Complete results from Section 3 processing
  properties:
    benchmark_name:
      type: string
      description: Source benchmark name
    
    benchmark_version:
      type: string
      description: Source benchmark version
    
    processing_start_time:
      type: string
      format: date-time
      description: When processing started
    
    processing_end_time:
      type: string
      format: date-time
      description: When processing ended
    
    executable_checks:
      type: array
      items:
        $ref: "#/ExecutableCheck"
      description: All generated executable checks
    
    implementation_coverage:
      $ref: "#/ImplementationCoverage"
      description: Implementation success metrics
    
    generation_errors:
      type: array
      items:
        type: object
      description: Detailed generation error logs
    
    validation_errors:
      type: array
      items:
        type: object
      description: Detailed validation error logs
    
    summary:
      type: object
      description: High-level summary statistics
      properties:
        total_checks:
          type: integer
        successful_checks:
          type: integer
        failed_checks:
          type: integer
        success_rate:
          type: number
        processing_time_minutes:
          type: number
        provider_summary:
          type: object

# Example Section 3 Output Structure
Section3OutputExample:
  example:
    benchmark_name: "OWASP Top 10 2021"
    benchmark_version: "2021"
    processing_start_time: "2024-01-15T10:00:00Z"
    processing_end_time: "2024-01-15T11:30:00Z"
    
    executable_checks:
      - check_id: "OWASP-2021-A01-001-github-repo"
        name: "Branch Protection Check - GitHub Repo"
        validation_status: "PASS"
        python_code: |
          def check_branch_protection(resource):
              branches = resource.get("basic_info", {}).get("branches", [])
              for branch in branches:
                  if branch.get("name") == "main":
                      if not branch.get("protected", False):
                          return {"status": "FAIL", "message": "Main branch is not protected"}
              return {"status": "PASS", "message": "Main branch is protected"}
        saved_to_db: true
    
    implementation_coverage:
      total_benchmark_checks: 10
      total_generation_tasks: 40
      successfully_generated: 35
      validation_passes: 28
      saved_to_database: 25
      coverage_percentages:
        overall_success: 62.5
        
    summary:
      total_checks: 40
      successful_checks: 25
      success_rate: 62.5
      processing_time_minutes: 90
