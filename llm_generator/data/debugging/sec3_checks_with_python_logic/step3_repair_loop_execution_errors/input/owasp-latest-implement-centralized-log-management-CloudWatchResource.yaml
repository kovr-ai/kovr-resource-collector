check:
  category: audit
  control_names:
  - NIST-800-53-AU-6
  - ISO-27001-A.12.4.1
  literature: Centralized log management is a critical security practice that involves
    collecting, storing, and analyzing log data from various sources (e.g., servers,
    applications, network devices) in a centralized location. This enables organizations
    to monitor and detect security incidents, troubleshoot issues, and comply with
    regulatory requirements. Without centralized log management, it becomes challenging
    to gain visibility into system activities, identify potential threats, and respond
    to incidents effectively. Implementing centralized log management enhances an
    organization's security posture by providing a comprehensive view of system events,
    enabling timely detection of anomalies, and facilitating incident response and
    forensic investigations.
  name: owasp-latest-implement-centralized-log-management
  resource:
    field_paths: []
    literature: null
    name: CloudWatchResource
    reason: null
  unique_id: owasp-latest-implement-centralized-log-management
errors:
- error: "Traceback (most recent call last):\n  File \"/Users/aetoskia/Workspace/code/kovr-resource-collector/llm_generator/checks_with_python_logic/validate_with_mock_data/services.py\"\
    , line 73, in _process_input\n    result = comparison_operation(fetched_value,\
    \ None)\n  File \"/Users/aetoskia/Workspace/code/kovr-resource-collector/con_mon/compliance/models/checks.py\"\
    , line 39, in __call__\n    response = self.function(fetched_value, config_value)\n\
    \  File \"<string>\", line 18, in custom\n  File \"<string>\", line 11, in custom\n\
    AttributeError: 'NoneType' object has no attribute 'startswith'\n"
  field_path: log_groups[*].log_group_name
  input_filepath: llm_generator_v2/data/debugging/sec3_checks_with_python_logic/step1_generate_python_logic/input/owasp-latest-implement-centralized-log-management-CloudWatchResource.yaml
  logic: "result = False\n\n# Check if any log group name starts with '/aws/lambda/'\n\
    if fetched_value is not None:\n    for log_group_name in fetched_value:\n    \
    \    if log_group_name.startswith('/aws/lambda/'):\n            result = True\n\
    \            break"
  output_filepath: llm_generator_v2/data/debugging/sec3_checks_with_python_logic/step1_generate_python_logic/output/owasp-latest-implement-centralized-log-management-CloudWatchResource.yaml
  result: null
  success: false
