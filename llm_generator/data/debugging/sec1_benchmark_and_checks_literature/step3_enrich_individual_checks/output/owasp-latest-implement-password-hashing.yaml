check:
  benchmarks:
  - confidence: 0.9
    reason: Implementing secure password hashing techniques helps mitigate the risk
      of brute-force attacks, which is a common technique used by attackers to gain
      unauthorized access to systems and data.
    unique_id: MITRE-ATT&CK-T1110
  - confidence: 0.8
    reason: Secure password hashing is a critical defense against attackers attempting
      to compromise valid user accounts and gain unauthorized access to systems and
      data.
    unique_id: MITRE-ATT&CK-T1078
  category: authentication
  controls:
  - confidence: 0.9
    reason: This control requires the use of authenticator management, which includes
      implementing approved password-based authentication mechanisms and enforcing
      password complexity and hashing requirements.
    unique_id: NIST-800-53-IA-5
  - confidence: 0.8
    reason: This control requires the implementation of appropriate authentication
      mechanisms, including secure password management practices such as hashing and
      salting.
    unique_id: ISO-27001-A.9.4.3
  literature: Password hashing is a crucial security measure that protects user credentials
    from being compromised in the event of a data breach. It involves applying a one-way
    cryptographic hash function to the password before storing it in the database.
    This process ensures that even if an attacker gains access to the password database,
    they cannot easily recover the original passwords. Instead, they would need to
    perform computationally expensive brute-force attacks or use pre-computed rainbow
    tables to attempt to crack the hashed passwords. Implementing strong password
    hashing algorithms, such as bcrypt, scrypt, or Argon2, with appropriate cost factors
    and salting, significantly increases the difficulty and computational resources
    required for an attacker to crack the passwords. This check validates that the
    application is using a secure and up-to-date password hashing algorithm, which
    is essential for protecting user accounts and sensitive data.
  severity: high
  tags:
  - password
  - hashing
  - authentication
  - security
  unique_id: owasp-latest-implement-password-hashing
