resource:
  check:
    unique_id: owasp-latest-implement-software-composition-analysis-(sca)-process
  field_paths:
  - security_data.code_scanning_alerts
  - security_data.dependency_graph
  - security_data.security_advisories
  - security_data.vulnerability_alerts
  fix_details:
    automation_available: true
    description: 'If the repository lacks an effective SCA process, the following
      steps can be taken to implement one:'
    estimated_time: 1-2 hours for initial setup, ongoing maintenance required
    instructions:
    - 1. Enable GitHub's security features, such as code scanning, dependency graph,
      and security advisories.
    - 2. Regularly review and address any identified vulnerabilities, dependencies,
      or security advisories.
    - 3. Implement a process for updating and patching vulnerable components in a
      timely manner.
    - 4. Consider integrating third-party SCA tools or services for more comprehensive
      analysis.
  is_valid: true
  literature: The GitHub resource provides information about the repository's security
    features, including code scanning alerts, dependency vulnerabilities, and security
    advisories. This data can be used to implement a Software Composition Analysis
    (SCA) process by identifying and analyzing the open source and third-party components
    used in the repository's codebase. By regularly scanning the repository for known
    vulnerabilities and licensing issues, organizations can proactively address potential
    risks and maintain the security and compliance of their software.
  name: GithubResource
  output_statements:
    failure: The repository lacks an effective Software Composition Analysis (SCA)
      process, and may be at risk due to unidentified vulnerabilities, dependencies,
      or security issues.
    partial: The repository has a partially implemented Software Composition Analysis
      (SCA) process, but may still have unidentified vulnerabilities, dependencies,
      or security issues.
    success: The repository has an effective Software Composition Analysis (SCA) process
      in place, with regular scans for vulnerabilities, dependencies, and security
      advisories.
  reason: The GitHub resource contains relevant security data that can be used to
    implement an SCA process. The code_scanning_alerts, dependency_graph, security_advisories,
    and vulnerability_alerts fields provide information about potential vulnerabilities,
    dependencies, and security issues in the repository's codebase.
