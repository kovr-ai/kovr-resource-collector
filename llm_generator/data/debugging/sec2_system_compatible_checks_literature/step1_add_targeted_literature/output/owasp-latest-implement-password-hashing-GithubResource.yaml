resource:
  check:
    unique_id: owasp-latest-implement-password-hashing
  field_paths: []
  fix_details:
    automation_available: false
    description: This security check is not applicable to the provided GitHub resource.
      However, if you are developing an application that handles user authentication,
      it is crucial to implement secure password hashing practices.
    estimated_time: Varies depending on the application's complexity and existing
      authentication implementation.
    instructions:
    - Use a modern and secure password hashing algorithm, such as bcrypt, scrypt,
      or Argon2.
    - Apply appropriate cost factors to make the hashing process computationally expensive,
      deterring brute-force attacks.
    - Use unique salts for each password to prevent precomputed attacks.
    - Store the hashed passwords securely in the application's database.
    - Regularly review and update the password hashing implementation to stay up-to-date
      with the latest security recommendations.
  is_valid: false
  literature: The security check 'owasp-latest-implement-password-hashing' is focused
    on ensuring that applications are using secure and up-to-date password hashing
    algorithms, such as bcrypt, scrypt, or Argon2, with appropriate cost factors and
    salting. This is a crucial security measure to protect user credentials from being
    compromised in the event of a data breach.
  name: GithubResource
  output_statements:
    failure: The application is not using a secure and up-to-date password hashing
      algorithm, or the implementation is not following best practices.
    partial: Not applicable for this resource.
    success: The application is using a secure and up-to-date password hashing algorithm
      with appropriate cost factors and salting.
  reason: The provided resource is a GitHub repository, which does not contain information
    about the application's password hashing implementation. This security check is
    specifically related to the application's authentication mechanism and how it
    handles user passwords. The GitHub resource does not have any relevant field paths
    that would allow for the assessment of this security check.
