# GitHub-specific checks configuration
# Maps to Check model structure in checks/models.py
# Updated to use framework_id and control_id from CSV data for better performance

checks:
  - id: 1001
    connection_id: 1
    name: "github_main_branch_protected"
    description: "Verify that the main branch in GitHub repository has protection enabled"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1240  # CM-3-4-3 (Configuration Change Control)
    control_name: "CM-3-4-3"
    resource_type: "GithubResource"
    field_path: "repository_data.branches"
    resource_type: "GithubResource"
    operation:
      name: "custom"
      custom_logic: |
        # Check if the main branch (or master branch) is protected
        if not isinstance(fetched_value, list):
            result = False
        else:
            result = False  # Default to False if main branch not found
            main_branch_names = ['main', 'master', 'production', 'prod']  # Common main branch names
            
            for branch in fetched_value:
                branch_name = None
                is_protected = False
                
                if isinstance(branch, dict):
                    branch_name = branch.get('name', '')
                    is_protected = branch.get('protected', False)
                else:
                    # Handle Pydantic models
                    branch_name = getattr(branch, 'name', '')
                    is_protected = getattr(branch, 'protected', False)
                
                # Check if this is a main branch
                if branch_name in main_branch_names:
                    result = is_protected
                    break  # Found main branch, stop looking
    expected_value: null
    tags: ["security", "github", "branch_protection", "main_branch"]
    severity: "high"
    category: "access_control"

  - id: 1002
    connection_id: 1
    name: "github_repository_private"
    description: "Verify that GitHub repository is private"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1217  # AC-3-1-18 (Access Control for Mobile Devices)
    control_name: "AC-3-1-18"
    resource_type: "GithubResource"
    field_path: "repository_data.basic_info.private"
    resource_type: "GithubResource"
    operation:
      name: "EQUAL"
    expected_value: true
    tags: ["security", "github", "visibility"]
    severity: "medium"
    category: "access_control"

  - id: 1003
    connection_id: 1
    name: "github_minimum_branch_count"
    description: "Verify that GitHub repository has at least 3 branches"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 287  # CM-8 (System Component Inventory)
    control_name: "CM-8"
    resource_type: "GithubResource"
    field_path: "len(repository_data.branches)"
    resource_type: "GithubResource"
    operation:
      name: "GREATER_THAN_OR_EQUAL"
    expected_value: 3
    tags: ["development", "github", "branch_management"]
    severity: "low"
    category: "development_practices"

  # NIST 800-171 Rev 2 - Additional Security Controls
  - id: 1004
    connection_id: 1
    name: "github_advanced_security_enabled"
    description: "Verify that GitHub Advanced Security is enabled"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1303  # SI-3-14-1 (Flaw Remediation)
    control_name: "SI-3-14-1"
    resource_type: "GithubResource"
    field_path: "security_data.security_analysis.advanced_security_enabled"
    resource_type: "GithubResource"
    operation:
      name: "EQUAL"
    expected_value: true
    tags: ["security", "github", "advanced_security"]
    severity: "high"
    category: "security_assessment"

  - id: 1005
    connection_id: 1
    name: "github_secret_scanning_enabled"
    description: "Verify that secret scanning is enabled to protect authentication info"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1255  # IA-3-5-9 (Password Management)
    control_name: "IA-3-5-9"
    resource_type: "GithubResource"
    field_path: "security_data.security_analysis.secret_scanning_enabled"
    resource_type: "GithubResource"
    operation:
      name: "EQUAL"
    expected_value: true
    tags: ["security", "github", "secret_scanning"]
    severity: "high"
    category: "identity_authentication"

  - id: 1006
    connection_id: 1
    name: "github_push_protection_enabled"
    description: "Verify that push protection is enabled to prevent secret leaks"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1255  # IA-3-5-9 (Password Management)
    control_name: "IA-3-5-9"
    resource_type: "GithubResource"
    field_path: "security_data.security_analysis.push_protection_enabled"
    resource_type: "GithubResource"
    operation:
      name: "EQUAL"
    expected_value: true
    tags: ["security", "github", "push_protection"]
    severity: "high"
    category: "identity_authentication"

  - id: 1007
    connection_id: 1
    name: "github_dependency_review_enabled"
    description: "Verify that dependency review is enabled for vulnerability management"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1303  # SI-3-14-1 (Flaw Remediation)
    control_name: "SI-3-14-1"
    resource_type: "GithubResource"
    field_path: "security_data.security_analysis.dependency_review_enabled"
    resource_type: "GithubResource"
    operation:
      name: "EQUAL"
    expected_value: true
    tags: ["security", "github", "dependency_review"]
    severity: "medium"
    category: "security_assessment"

  - id: 1008
    connection_id: 1
    name: "github_no_dependabot_alerts"
    description: "Verify that there are no unresolved Dependabot security alerts"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1303  # SI-3-14-1 (Flaw Remediation)
    control_name: "SI-3-14-1"
    resource_type: "GithubResource"
    field_path: "security_data.total_dependabot_alerts"
    resource_type: "GithubResource"
    operation:
      name: "EQUAL"
    expected_value: 0
    tags: ["security", "github", "dependabot", "vulnerability"]
    severity: "medium"
    category: "security_assessment"

  - id: 1009
    connection_id: 1
    name: "github_no_code_scanning_alerts"
    description: "Verify that there are no unresolved code scanning alerts"  
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1303  # SI-3-14-1 (Flaw Remediation)
    control_name: "SI-3-14-1"
    resource_type: "GithubResource"
    field_path: "security_data.total_code_scanning_alerts"
    resource_type: "GithubResource"
    operation:
      name: "EQUAL"
    expected_value: 0
    tags: ["security", "github", "code_scanning", "sast"]
    severity: "medium"
    category: "security_assessment"

  - id: 1010
    connection_id: 1
    name: "github_external_collaborators_limited"
    description: "Verify that external collaborators are limited for access control"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1205  # AC-3-1-6 (Least Privilege â€“ Privileged Accounts)
    control_name: "AC-3-1-6"
    resource_type: "GithubResource"
    field_path: "organization_data.total_outside_collaborators"
    resource_type: "GithubResource"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 5
    tags: ["security", "github", "access_control", "collaborators"]
    severity: "medium"
    category: "access_control"

  - id: 1011
    connection_id: 1
    name: "github_repository_not_archived"
    description: "Verify that active repositories are not archived"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1200  # AC-3-1-1 (Account Management)
    control_name: "AC-3-1-1"
    resource_type: "GithubResource"
    field_path: "repository_data.basic_info.archived"
    operation:
      name: "EQUAL"
    expected_value: false
    tags: ["governance", "github", "repository_status"]
    severity: "low"
    category: "access_control"

  - id: 1012
    connection_id: 1
    name: "github_repository_not_disabled"
    description: "Verify that repositories are not disabled"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1200  # AC-3-1-1 (Account Management)
    control_name: "AC-3-1-1"
    resource_type: "GithubResource"
    field_path: "repository_data.basic_info.disabled"
    operation:
      name: "EQUAL"
    expected_value: false
    tags: ["governance", "github", "repository_status"]
    severity: "medium"
    category: "access_control"

  # NIST 800-53 Rev 5 - Additional Controls
  - id: 1013
    connection_id: 1
    name: "github_admin_members_limited"
    description: "Verify that admin privileges are limited (Least Privilege)"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 90   # AC-6 (Least Privilege)
    control_name: "AC-6"
    resource_type: "GithubResource"
    field_path: "organization_data.admin_members"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 3
    tags: ["security", "github", "access_control", "least_privilege"]
    severity: "high"
    category: "access_control"

  - id: 1014
    connection_id: 1
    name: "github_has_security_features"
    description: "Verify that multiple security features are enabled"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 75   # AC-3 (Access Enforcement)
    control_name: "AC-3"
    resource_type: "GithubResource"
    field_path: "security_data.security_features_enabled"
    operation:
      name: "GREATER_THAN_OR_EQUAL"
    expected_value: 2
    tags: ["security", "github", "security_features"]
    severity: "high"
    category: "access_control"

  - id: 1015
    connection_id: 1
    name: "github_webhooks_secured"
    description: "Verify that webhooks are properly configured and limited"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 473  # MA-4 (Nonlocal Maintenance)
    control_name: "MA-4"
    resource_type: "GithubResource"
    field_path: "advanced_features_data.total_webhooks"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 5
    tags: ["security", "github", "webhooks", "integrations"]
    severity: "medium"
    category: "maintenance"

  - id: 1016
    connection_id: 1
    name: "github_active_webhooks_monitored"
    description: "Verify that active webhooks are monitored"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 695  # SI-4 (System Monitoring)
    control_name: "SI-4"
    resource_type: "GithubResource"
    field_path: "advanced_features_data.active_webhooks"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 3
    tags: ["security", "github", "monitoring", "webhooks"]
    severity: "medium"
    category: "system_monitoring"

  - id: 1017
    connection_id: 1
    name: "github_recent_activity"
    description: "Verify that repository shows recent development activity"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 287  # CM-8 (System Component Inventory)
    control_name: "CM-8"
    resource_type: "GithubResource"
    field_path: "repository_data.statistics.total_commits"
    operation:
      name: "GREATER_THAN"
    expected_value: 10
    tags: ["development", "github", "activity", "inventory"]
    severity: "low"
    category: "configuration_management"

  - id: 1018
    connection_id: 1
    name: "github_contributors_managed"
    description: "Verify that repository has appropriate number of contributors"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 71   # AC-2 (Account Management)
    control_name: "AC-2"
    resource_type: "GithubResource"
    field_path: "repository_data.statistics.contributors_count"
    operation:
      name: "GREATER_THAN"
    expected_value: 1
    tags: ["governance", "github", "contributors", "account_management"]
    severity: "low"
    category: "access_control"

  - id: 1019
    connection_id: 1
    name: "github_issues_enabled"
    description: "Verify that issues are enabled for incident tracking"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 549  # IR-4 (Incident Handling)
    control_name: "IR-4"
    resource_type: "GithubResource"
    field_path: "repository_data.metadata.has_issues"
    operation:
      name: "EQUAL"
    expected_value: true
    tags: ["governance", "github", "issues", "incident_response"]
    severity: "low"
    category: "incident_response"

  - id: 1020
    connection_id: 1
    name: "github_template_usage_controlled"
    description: "Verify that template repositories are appropriately configured"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 282  # CM-6 (Configuration Settings)
    control_name: "CM-6"
    resource_type: "GithubResource"
    field_path: "repository_data.metadata.is_template"
    operation:
      name: "EQUAL"
    expected_value: false
    tags: ["governance", "github", "templates", "least_functionality"]
    severity: "low"
    category: "configuration_management"

  - id: 1021
    connection_id: 1
    name: "github_collaborators_monitored"
    description: "Verify that total collaborators are within acceptable limits"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 113  # AU-6 (Audit Record Review, Analysis, and Reporting)
    control_name: "AU-6"
    resource_type: "GithubResource"
    field_path: "collaboration_data.total_collaborators"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 20
    tags: ["security", "github", "collaborators", "audit_review"]
    severity: "medium"
    category: "audit_accountability"

  - id: 1022
    connection_id: 1
    name: "github_open_issues_managed"
    description: "Verify that open issues are actively managed"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 549  # IR-4 (Incident Handling)
    control_name: "IR-4"
    resource_type: "GithubResource"
    field_path: "collaboration_data.open_issues"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 50
    tags: ["governance", "github", "issues", "incident_handling"]
    severity: "low"
    category: "incident_response"

  - id: 1023
    connection_id: 1
    name: "github_pull_requests_active"
    description: "Verify that pull requests indicate active development"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 275  # CM-3 (Configuration Change Control)
    control_name: "CM-3"
    resource_type: "GithubResource"
    field_path: "collaboration_data.total_pull_requests"
    operation:
      name: "GREATER_THAN"
    expected_value: 5
    tags: ["development", "github", "pull_requests", "change_control"]
    severity: "low"
    category: "configuration_management"

  - id: 1024
    connection_id: 1
    name: "github_security_advisories_monitored"
    description: "Verify that security advisories are being tracked"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 96   # AU-2 (Event Logging)
    control_name: "AU-2"
    resource_type: "GithubResource"
    field_path: "security_data.total_advisories"
    operation:
      name: "GREATER_THAN_OR_EQUAL"
    expected_value: 0
    tags: ["security", "github", "advisories", "audit_events"]
    severity: "medium"
    category: "audit_accountability"

  - id: 1025
    connection_id: 1
    name: "github_workflows_controlled"
    description: "Verify that GitHub Actions workflows are controlled and limited"
    framework_id: 3  # NIST 800-171 rev2 Catalog
    framework_name: "NIST 800-171 rev2 Catalog"
    control_id: 1201  # AC-3-1-2 (Access Enforcement)
    control_name: "AC-3-1-2"
    resource_type: "GithubResource"
    field_path: "actions_data.total_workflows"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 10
    tags: ["security", "github", "workflows", "process_control"]
    severity: "medium"
    category: "access_control"

  - id: 1026
    connection_id: 1
    name: "github_active_workflows_monitored"
    description: "Verify that active workflows are monitored for security"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 773  # SA-9 (External System Services)
    control_name: "SA-9"
    resource_type: "GithubResource"
    field_path: "actions_data.active_workflows"
    operation:
      name: "LESS_THAN_OR_EQUAL"
    expected_value: 5
    tags: ["security", "github", "workflows", "external_software"]
    severity: "medium"
    category: "system_services_acquisition"

  - id: 1027
    connection_id: 1
    name: "github_recent_workflow_activity"
    description: "Verify that workflow runs indicate active CI/CD"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 779  # SA-11 (Developer Security and Privacy Architecture and Design Testing)
    control_name: "SA-11"
    resource_type: "GithubResource"
    field_path: "actions_data.recent_runs_count"
    operation:
      name: "GREATER_THAN"
    expected_value: 3
    tags: ["development", "github", "cicd", "security_testing"]
    severity: "low"
    category: "system_services_acquisition"

  - id: 1028
    connection_id: 1
    name: "github_organization_members_controlled"
    description: "Verify that organization membership is controlled"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 71   # AC-2 (Account Management)
    control_name: "AC-2"
    resource_type: "GithubResource"
    field_path: "organization_data.total_members"
    operation:
      name: "GREATER_THAN"
    expected_value: 1
    tags: ["security", "github", "organization", "account_management"]
    severity: "medium"
    category: "access_control"

  - id: 1029
    connection_id: 1
    name: "github_teams_structured"
    description: "Verify that teams are used for structured access control"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 75   # AC-3 (Access Enforcement)
    control_name: "AC-3"
    resource_type: "GithubResource"
    field_path: "organization_data.total_teams"
    operation:
      name: "GREATER_THAN"
    expected_value: 0
    tags: ["security", "github", "teams", "access_enforcement"]
    severity: "low"
    category: "access_control"

  - id: 1030
    connection_id: 1
    name: "github_repository_has_license"
    description: "Verify that repository has a defined license for compliance"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 595  # PM-1 (Program Management Policy and Procedures)
    control_name: "PM-1"
    resource_type: "GithubResource"
    field_path: "repository_data.metadata.license"
    operation:
      name: "NOT_EQUAL"  
    expected_value: null
    tags: ["governance", "github", "license", "program_management"]
    severity: "low"
    category: "program_management"

  # AWS Resource Checks
  - id: 2001
    connection_id: 2
    name: "aws_ec2_security_groups_no_open_ingress"
    description: "Verify that EC2 security groups do not allow unrestricted ingress from 0.0.0.0/0"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 75   # AC-3 (Access Enforcement)
    control_name: "AC-3"
    field_path: "security_groups"
    resource_type: "AWSEC2Resource"
    operation:
      name: "custom"
      custom_logic: |
        # Check if any security group has unrestricted ingress rules
        if not isinstance(fetched_value, list):
            result = True  # Default to pass if no security groups
        else:
            result = True  # Default to pass
            for sg in fetched_value:
                if isinstance(sg, dict):
                    ingress_rules = sg.get('ingress_rules', [])
                else:
                    # Handle Pydantic models
                    ingress_rules = getattr(sg, 'ingress_rules', [])
                
                for rule in ingress_rules:
                    cidr_blocks = rule.get('cidr_blocks', []) if isinstance(rule, dict) else getattr(rule, 'cidr_blocks', [])
                    if '0.0.0.0/0' in cidr_blocks:
                        result = False
                        break
                if not result:
                    break
    expected_value: null
    tags: ["security", "aws", "ec2", "security_groups", "network_access"]
    severity: "high"
    category: "access_control"

  - id: 2002
    connection_id: 2
    name: "aws_iam_users_have_mfa"
    description: "Verify that IAM users have multi-factor authentication enabled"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 157  # IA-2 (Identification and Authentication)
    control_name: "IA-2"
    field_path: "users"
    resource_type: "AWSIAMResource"
    operation:
      name: "custom"
      custom_logic: |
        # Check if all IAM users have MFA enabled
        if not isinstance(fetched_value, list) or len(fetched_value) == 0:
            result = True  # Pass if no users
        else:
            result = True
            for user in fetched_value:
                if isinstance(user, dict):
                    mfa_devices = user.get('mfa_devices', [])
                else:
                    # Handle Pydantic models
                    mfa_devices = getattr(user, 'mfa_devices', [])
                
                if len(mfa_devices) == 0:
                    result = False
                    break
    expected_value: null
    tags: ["security", "aws", "iam", "mfa", "authentication"]
    severity: "high"
    category: "identification_authentication"

  - id: 2003
    connection_id: 2
    name: "aws_s3_buckets_encrypted"
    description: "Verify that all S3 buckets have encryption enabled"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 658  # SC-8 (Transmission Confidentiality and Integrity)
    control_name: "SC-8"
    field_path: "buckets"
    resource_type: "AWSS3Resource"
    operation:
      name: "custom"
      custom_logic: |
        # Check if all S3 buckets have encryption enabled
        if not isinstance(fetched_value, list):
            result = True  # Pass if no buckets
        else:
            result = True
            for bucket in fetched_value:
                if isinstance(bucket, dict):
                    encryption = bucket.get('encryption', {})
                else:
                    # Handle Pydantic models
                    encryption = getattr(bucket, 'encryption', {})
                
                if not encryption or not encryption.get('enabled', False):
                    result = False
                    break
    expected_value: null
    tags: ["security", "aws", "s3", "encryption", "data_protection"]
    severity: "high"
    category: "system_communications_protection"

  - id: 2004
    connection_id: 2
    name: "aws_cloudtrail_logging_enabled"
    description: "Verify that CloudTrail logging is enabled for audit trails"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 96   # AU-2 (Event Logging)
    control_name: "AU-2"
    field_path: "trails"
    resource_type: "AWSCloudTrailResource"
    operation:
      name: "custom"
      custom_logic: |
        # Check if at least one CloudTrail is enabled and logging
        if not isinstance(fetched_value, list):
            result = False  # Fail if no trails
        else:
            result = False
            for trail in fetched_value:
                if isinstance(trail, dict):
                    is_logging = trail.get('is_logging', False)
                    status = trail.get('status', {})
                else:
                    # Handle Pydantic models
                    is_logging = getattr(trail, 'is_logging', False)
                    status = getattr(trail, 'status', {})
                    
                if is_logging and status.get('is_logging', False):
                    result = True
                    break
    expected_value: null
    tags: ["security", "aws", "cloudtrail", "logging", "audit"]
    severity: "high"
    category: "audit_accountability"

  - id: 2005
    connection_id: 2
    name: "aws_cloudwatch_log_groups_exist"
    description: "Verify that CloudWatch log groups exist for monitoring"
    framework_id: 2  # NIST 800-53
    framework_name: "NIST 800-53"
    control_id: 695  # SI-4 (System Monitoring)
    control_name: "SI-4"
    field_path: "log_groups"
    resource_type: "AWSCloudWatchResource"
    operation:
      name: "custom"
      custom_logic: |
        # Check if CloudWatch log groups exist for monitoring
        if not isinstance(fetched_value, list):
            result = False  # Fail if no log groups
        else:
            result = len(fetched_value) > 0  # Pass if at least one log group exists
    expected_value: null
    tags: ["security", "aws", "cloudwatch", "monitoring", "logging"]
    severity: "medium"
    category: "system_information_integrity" 