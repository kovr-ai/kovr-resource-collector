# Resources configuration file
# Defines resource structures for different providers

github:
  # Nested data type schemas
  RepositoryData:
    name: "repository_data"
    description: "Repository basic information and metadata"
    fields:
      basic_info:
        id: "integer"
        name: "string"
        full_name: "string"
        description: "string"
        private: "boolean"
        owner: "string"
        html_url: "string"
        clone_url: "string"
        ssh_url: "string"
        size: "integer"
        language: "string"
        created_at: "string"
        updated_at: "string"
        pushed_at: "string"
        stargazers_count: "integer"
        watchers_count: "integer"
        forks_count: "integer"
        open_issues_count: "integer"
        archived: "boolean"
        disabled: "boolean"
      metadata:
        default_branch: "string"
        topics: "array"
        has_issues: "boolean"
        has_projects: "boolean"
        has_wiki: "boolean"
        has_pages: "boolean"
        has_downloads: "boolean"
        has_discussions: "boolean"
        is_template: "boolean"
        license: "string"
      branches: "array"
      statistics:
        total_commits: "integer"
        contributors_count: "integer"
        languages: "object"
        code_frequency: "array"

  ActionsData:
    name: "actions_data"
    description: "GitHub Actions workflows and runs"
    fields:
      workflows: "object"
      total_workflows: "integer"
      active_workflows: "integer"
      recent_runs_count: "integer"

  CollaborationData:
    name: "collaboration_data"
    description: "Collaboration information - issues, PRs, collaborators"
    fields:
      issues: "array"
      pull_requests: "array"
      collaborators: "array"
      total_issues: "integer"
      open_issues: "integer"
      closed_issues: "integer"
      total_pull_requests: "integer"
      open_pull_requests: "integer"
      merged_pull_requests: "integer"
      draft_pull_requests: "integer"
      total_collaborators: "integer"

  SecurityData:
    name: "security_data"
    description: "Security advisories, alerts and analysis"
    fields:
      security_advisories: "object"
      vulnerability_alerts: "object"
      dependency_graph: "object"
      security_analysis:
        advanced_security_enabled: "boolean"
        secret_scanning_enabled: "boolean"
        push_protection_enabled: "boolean"
        dependency_review_enabled: "boolean"
      code_scanning_alerts: "object"
      total_advisories: "integer"
      total_dependabot_alerts: "integer"
      total_code_scanning_alerts: "integer"
      security_features_enabled: "integer"

  OrganizationData:
    name: "organization_data"
    description: "Organization members, teams and collaborators"
    fields:
      members: "array"
      teams: "array"
      outside_collaborators: "array"
      total_members: "integer"
      total_teams: "integer"
      total_outside_collaborators: "integer"
      admin_members: "integer"
      members_error: "string"
      teams_error: "string"
      collaborators_error: "string"

  AdvancedFeaturesData:
    name: "advanced_features_data"
    description: "Advanced GitHub features - tags, webhooks"
    fields:
      tags: "array"
      webhooks: "array"
      total_tags: "integer"
      total_webhooks: "integer"
      active_webhooks: "integer"
      tags_error: "string"
      webhooks_error: "string"

  resources:
    # Main resource schemas
    Resource:
      name: "github"
      description: "GitHub repository resource"
      provider: "github"

      # Define the structure that matches GitHub API response with all data types
      fields:
        name: "string"  # Repository name for easy identification
        repository_data: "RepositoryData"  # Nested Pydantic model
        actions_data: "ActionsData"        # Nested Pydantic model
        collaboration_data: "CollaborationData"  # Nested Pydantic model
        security_data: "SecurityData"      # Nested Pydantic model
        organization_data: "OrganizationData"    # Nested Pydantic model
        advanced_features_data: "AdvancedFeaturesData"  # Nested Pydantic model

  ResourceCollection:
    name: "github_collection"
    description: "Collection of GitHub repository resources from a single connector call"
    provider: "github"
    collection_type: "GithubResource"

    # Define the structure for GitHub resource collections
    fields:
      resources:
        - "github.resources.Resource"
      source_connector: "string"
      total_count: "integer"
      fetched_at: "string"
      collection_metadata:
        authenticated_user: "string"
        total_repositories: "integer"
        total_workflows: "integer"
        total_issues: "integer"
        total_pull_requests: "integer"
        total_security_alerts: "integer"
        total_collaborators: "integer"
        total_tags: "integer"
        total_active_webhooks: "integer"
        rate_limit_info: "object"
      github_api_metadata:
        collection_time: "string"
        api_version: "string"
        scope: "array"

aws:
  resources:
    # AWS EC2 Resource Schema
    EC2Resource:
      name: "aws_ec2"
      description: "AWS EC2 service resource"
      provider: "aws"
      service: "ec2"

      fields:
        region: "string"
        account_id: "string"
        # Account-level information
        account:
          limits: "object"
          reserved_instances: "array"
          spot_instances: "array"
        # EC2 resources
        instances: "object"
        security_groups: "object"
        vpcs: "object"
        subnets: "object"
        route_tables: "object"
        internet_gateways: "object"
        nat_gateways: "object"
        elastic_ips: "object"
        key_pairs: "object"
        volumes: "object"
        snapshots: "object"
        network_interfaces: "object"
        relationships: "object"
        # Metadata
        total_instances: "integer"
        total_security_groups: "integer"
        total_vpcs: "integer"
        total_volumes: "integer"
        collection_timestamp: "string"

    # AWS IAM Resource Schema
    IAMResource:
      name: "aws_iam"
      description: "AWS IAM service resource"
      provider: "aws"
      service: "iam"

      fields:
        region: "string"
        account_id: "string"
        # Account-level information
        account: "object"
        # IAM resources
        users: "object"
        groups: "object"
        roles: "object"
        policies: "object"
        relationships: "object"
        # Metadata
        total_users: "integer"
        total_groups: "integer"
        total_roles: "integer"
        total_policies: "integer"
        collection_timestamp: "string"

    # AWS S3 Resource Schema
    S3Resource:
      name: "aws_s3"
      description: "AWS S3 service resource"
      provider: "aws"
      service: "s3"

      fields:
        region: "string"
        account_id: "string"
        # S3 resources
        buckets: "object"
        bucket_policies: "object"
        bucket_encryption: "object"
        bucket_versioning: "object"
        bucket_logging: "object"
        bucket_public_access: "object"
        bucket_lifecycle: "object"
        bucket_notifications: "object"
        # Metadata
        total_buckets: "integer"
        total_encrypted_buckets: "integer"
        total_public_buckets: "integer"
        total_versioned_buckets: "integer"
        collection_timestamp: "string"

    # AWS CloudTrail Resource Schema
    CloudTrailResource:
      name: "aws_cloudtrail"
      description: "AWS CloudTrail service resource"
      provider: "aws"
      service: "cloudtrail"

      fields:
        region: "string"
        account_id: "string"
        # CloudTrail resources
        trails: "object"
        event_selectors: "object"
        insight_selectors: "object"
        tags: "object"
        # Metadata
        total_trails: "integer"
        total_multi_region_trails: "integer"
        total_logging_trails: "integer"
        total_organization_trails: "integer"
        collection_timestamp: "string"

    # AWS CloudWatch Resource Schema
    CloudWatchResource:
      name: "aws_cloudwatch"
      description: "AWS CloudWatch service resource"
      provider: "aws"
      service: "cloudwatch"

      fields:
        region: "string"
        account_id: "string"
        # CloudWatch resources
        log_groups: "object"
        log_streams: "object"
        metrics: "object"
        alarms: "object"
        dashboards: "object"
        # Metadata
        total_log_groups: "integer"
        total_log_streams: "integer"
        total_alarms: "integer"
        total_dashboards: "integer"
        collection_timestamp: "string"

  ResourceCollection:
    name: "aws_collection"
    description: "Collection of AWS resources from a single connector call"
    provider: "aws"
    collection_type: "AWSResource"

    # Define the structure for AWS resource collections
    fields:
      resources:
        - "aws.resources.EC2Resource"
        - "aws.resources.IAMResource"
        - "aws.resources.S3Resource"
        - "aws.resources.CloudTrailResource"
        - "aws.resources.CloudWatchResource"
      source_connector: "string"
      total_count: "integer"
      fetched_at: "string"
      collection_metadata:
        account_id: "string"
        regions: "array"
        services_collected: "array"
        total_ec2_instances: "integer"
        total_iam_users: "integer"
        total_s3_buckets: "integer"
        total_cloudtrail_trails: "integer"
        total_cloudwatch_log_groups: "integer"
        collection_errors: "array"
      aws_api_metadata:
        collection_time: "string"
        api_version: "string"
        services: "array"
        regions_scanned: "array"