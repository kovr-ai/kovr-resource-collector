# Resources configuration file
# Defines resource structures for different providers

github:
  resources_field_schemas:
    # Nested data type schemas
    RepositoryData:
      name: "repository_data"
      description: "Repository basic information and metadata"
      fields:
        basic_info:
          id: "integer"
          name: "string"
          full_name: "string"
          description: "string"
          private: "boolean"
          owner: "string"
          html_url: "string"
          clone_url: "string"
          ssh_url: "string"
          size: "integer"
          language: "string"
          created_at: "string"
          updated_at: "string"
          pushed_at: "string"
          stargazers_count: "integer"
          watchers_count: "integer"
          forks_count: "integer"
          open_issues_count: "integer"
          archived: "boolean"
          disabled: "boolean"
        metadata:
          default_branch: "string"
          topics: "array"
          has_issues: "boolean"
          has_projects: "boolean"
          has_wiki: "boolean"
          has_pages: "boolean"
          has_downloads: "boolean"
          has_discussions: "boolean"
          is_template: "boolean"
          license: "string"
          visibility: "string"
          allow_forking: "boolean"
          web_commit_signoff_required: "boolean"
        branches:
          type: "array"  # List of branch objects
          structure:
            name: "string"
            commit:
              sha: "string"
              url: "string"
            protected: "boolean"
            protection:
              enabled: "boolean"
              required_status_checks: "object"
              enforce_admins: "boolean"
              required_pull_request_reviews: "object"
              restrictions: "object"
        statistics:
          total_commits: "integer"
          contributors_count: "integer"
          languages:
            type: "object"  # Dictionary of language -> bytes
            structure:
              Python: "integer"
              JavaScript: "integer"
              # ... other languages
          code_frequency: "array"

    ActionsData:
      name: "actions_data"
      description: "GitHub Actions workflows and runs"
      fields:
        workflows:
          type: "object"  # Dictionary/map of workflow_id -> workflow_data
          structure:
            id: "integer"
            name: "string"
            path: "string"
            state: "string"
            created_at: "string"
            updated_at: "string"
            url: "string"
            html_url: "string"
            badge_url: "string"
        total_workflows: "integer"
        active_workflows: "integer"
        recent_runs_count: "integer"

    CollaborationData:
      name: "collaboration_data"
      description: "Collaboration information - issues, PRs, collaborators"
      fields:
        issues:
          type: "array"  # List of issue objects
          structure:
            id: "integer"
            number: "integer"
            title: "string"
            state: "string"
            created_at: "string"
            updated_at: "string"
            closed_at: "string"
            user: "object"
            assignees: "array"
            labels: "array"
        pull_requests:
          type: "array"  # List of pull request objects
          structure:
            id: "integer"
            number: "integer"
            title: "string"
            state: "string"
            created_at: "string"
            updated_at: "string"
            closed_at: "string"
            merged_at: "string"
            user: "object"
            assignees: "array"
            reviewers: "array"
        collaborators:
          type: "array"  # List of collaborator objects
          structure:
            login: "string"
            id: "integer"
            type: "string"
            permissions:
              admin: "boolean"
              maintain: "boolean"
              push: "boolean"
              triage: "boolean"
              pull: "boolean"
        total_issues: "integer"
        open_issues: "integer"
        closed_issues: "integer"
        total_pull_requests: "integer"
        open_pull_requests: "integer"
        merged_pull_requests: "integer"
        draft_pull_requests: "integer"
        total_collaborators: "integer"

    SecurityData:
      name: "security_data"
      description: "Security advisories, alerts and analysis"
      fields:
        security_advisories:
          type: "object"
          structure:
            error: "string"  # May contain error message
            advisories: "array"
        vulnerability_alerts:
          type: "object"
          structure:
            enabled: "boolean"
            dependabot_alerts: "array"
            error: "string"
        dependency_graph:
          type: "object"
          structure:
            has_vulnerability_alerts_enabled: "boolean"
            security_and_analysis:
              advanced_security:
                status: "string"
              secret_scanning:
                status: "string"
              secret_scanning_push_protection:
                status: "string"
        security_analysis:
          advanced_security_enabled: "boolean"
          secret_scanning_enabled: "boolean"
          push_protection_enabled: "boolean"
          dependency_review_enabled: "boolean"
        code_scanning_alerts:
          type: "object"
          structure:
            error: "string"
            alerts: "array"
        total_advisories: "integer"
        total_dependabot_alerts: "integer"
        total_code_scanning_alerts: "integer"
        security_features_enabled: "integer"

    OrganizationData:
      name: "organization_data"
      description: "Organization members, teams and collaborators"
      fields:
        members:
          type: "array"  # List of member objects
          structure:
            login: "string"
            id: "integer"
            type: "string"
            role: "string"  # "admin", "member", etc.
            permissions: "object"
        teams:
          type: "array"  # List of team objects
          structure:
            id: "integer"
            name: "string"
            slug: "string"
            description: "string"
            privacy: "string"
            permission: "string"
            members_count: "integer"
        outside_collaborators:
          type: "array"  # List of collaborator objects
          structure:
            login: "string"
            id: "integer"
            type: "string"
            permissions: "object"
        total_members: "integer"
        total_teams: "integer"
        total_outside_collaborators: "integer"
        admin_members: "integer"
        members_error: "string"
        teams_error: "string"
        collaborators_error: "string"

    AdvancedFeaturesData:
      name: "advanced_features_data"
      description: "Advanced GitHub features - tags, webhooks"
      fields:
        tags:
          type: "array"  # List of tag objects
          structure:
            name: "string"
            commit:
              sha: "string"
              url: "string"
            zipball_url: "string"
            tarball_url: "string"
        webhooks:
          type: "array"  # List of webhook objects
          structure:
            id: "integer"
            name: "string"
            active: "boolean"
            events: "array"
            config:
              url: "string"
              content_type: "string"
              secret: "string"
              insecure_ssl: "string"
            created_at: "string"
            updated_at: "string"
        total_tags: "integer"
        total_webhooks: "integer"
        active_webhooks: "integer"
        tags_error: "string"
        webhooks_error: "string"

  resources:
    # Main resource schemas
    Resource:
      name: "github"
      description: "GitHub repository resource"
      provider: "github"

      # Define the structure that matches GitHub API response with all data types
      fields:
        name: "string"  # Repository name for easy identification
        repository_data: "RepositoryData"  # Nested Pydantic model
        actions_data: "ActionsData"        # Nested Pydantic model
        collaboration_data: "CollaborationData"  # Nested Pydantic model
        security_data: "SecurityData"      # Nested Pydantic model
        organization_data: "OrganizationData"    # Nested Pydantic model
        advanced_features_data: "AdvancedFeaturesData"  # Nested Pydantic model

  ResourceCollection:
    name: "github_collection"
    description: "Collection of GitHub repository resources from a single connector call"
    provider: "github"
    collection_type: "GithubResource"

    # Define the structure for GitHub resource collections
    fields:
      resources:
        - "github.resources.Resource"
      source_connector: "string"
      total_count: "integer"
      fetched_at: "string"
      collection_metadata:
        authenticated_user: "string"
        total_repositories: "integer"
        total_workflows: "integer"
        total_issues: "integer"
        total_pull_requests: "integer"
        total_security_alerts: "integer"
        total_collaborators: "integer"
        total_tags: "integer"
        total_active_webhooks: "integer"
        rate_limit_info: "object"
      github_api_metadata:
        collection_time: "string"
        api_version: "string"
        scope: "array"

aws:
  resources:
    # AWS EC2 Resource Schema
    EC2Resource:
      name: "aws_ec2"
      description: "AWS EC2 service resource"
      provider: "aws"
      service: "ec2"

      fields:
        # Account-level information
        account:
          limits: "object"
          reserved_instances: "array"
          spot_instances: "array"
        # EC2 resources
        instances:
          type: "object"  # Dictionary/map of instance_id -> instance_data
          structure:
            instance_type: "string"
            state: "string"
            launch_time: "string"
            image_id: "string"
            vpc_id: "string"
            subnet_id: "string"
            private_ip_address: "string"
            public_ip_address: "string"
            key_name: "string"
            security_groups: "array"
            tags: "object"
        security_groups:
          type: "object"  # Dictionary/map of group_id -> security_group_data
          structure:
            group_name: "string"
            description: "string"
            vpc_id: "string"
            inbound_rules: "array"
            outbound_rules: "array"
            tags: "object"
        vpcs:
          type: "object"  # Dictionary/map of vpc_id -> vpc_data
          structure:
            cidr_block: "string"
            state: "string"
            dhcp_options_id: "string"
            instance_tenancy: "string"
            is_default: "boolean"
            cidr_block_association_set: "array"
            tags: "object"
        subnets: "object"
        route_tables: "object"
        internet_gateways: "object"
        nat_gateways: "object"
        elastic_ips: "object"
        key_pairs: "object"
        volumes: "object"
        snapshots: "object"
        network_interfaces: "object"
        relationships: "object"

    # AWS IAM Resource Schema
    IAMResource:
      name: "aws_iam"
      description: "AWS IAM service resource"
      provider: "aws"
      service: "iam"

      fields:
        # Account-level information
        account: "object"
        # IAM resources
        users:
          type: "object"  # Dictionary/map of user_arn -> user_data
          structure:
            arn: "string"
            user_id: "string"
            user_name: "string"
            create_date: "string"
            path: "string"
            access_keys: "array"
            mfa_devices: "array"
            login_profile: "object"
            attached_policies: "array"
            inline_policies: "array"
            groups: "array"
            tags: "object"
        groups:
          type: "object"  # Dictionary/map of group_arn -> group_data
          structure:
            arn: "string"
            group_id: "string"
            group_name: "string"
            create_date: "string"
            path: "string"
            attached_policies: "array"
            inline_policies: "array"
            users: "array"
        roles:
          type: "object"  # Dictionary/map of role_arn -> role_data
          structure:
            arn: "string"
            role_id: "string"
            role_name: "string"
            create_date: "string"
            path: "string"
            assume_role_policy_document:
              Version: "string"
              Statement: "array"
            instance_profiles: "array"
            attached_policies: "array"
            inline_policies: "array"
            tags: "object"
        policies:
          type: "object"  # Dictionary/map of policy_arn -> policy_data
          structure:
            policy_name: "string"
            policy_id: "string"
            arn: "string"
            create_date: "string"
            update_date: "string"
            path: "string"
            default_version_id: "string"
            attachment_count: "integer"
            default_version:
              Document:
                Version: "string"
                Statement: "array"
              VersionId: "string"
              IsDefaultVersion: "boolean"
              CreateDate: "string"
            attached_entities: "object"
            tags: "object"
        relationships: "object"

    # AWS S3 Resource Schema
    S3Resource:
      name: "aws_s3"
      description: "AWS S3 service resource"
      provider: "aws"
      service: "s3"

      fields:
        # S3 resources
        buckets:
          type: "object"  # Dictionary/map of bucket_name -> bucket_data
          structure:
            name: "string"
            creation_date: "string"
            region: "string"
            versioning: "object"
            encryption: "object"
            public_access_block: "object"
            logging: "object"
            lifecycle: "object"
            notification: "object"
            tags: "object"
        bucket_policies: "object"
        bucket_encryption: "object"
        bucket_versioning: "object"
        bucket_logging: "object"
        bucket_public_access: "object"
        bucket_lifecycle: "object"
        bucket_notifications: "object"

    # AWS CloudTrail Resource Schema
    CloudTrailResource:
      name: "aws_cloudtrail"
      description: "AWS CloudTrail service resource"
      provider: "aws"
      service: "cloudtrail"

      fields:
        # CloudTrail resources
        trails:
          type: "object"  # Dictionary/map of trail_name -> trail_data
          structure:
            name: "string"
            s3_bucket_name: "string"
            s3_key_prefix: "string"
            include_global_service_events: "boolean"
            is_multi_region_trail: "boolean"
            enable_log_file_validation: "boolean"
            event_selectors: "array"
            insight_selectors: "array"
            is_logging: "boolean"
            kms_key_id: "string"
            tags: "object"
        event_selectors: "object"
        insight_selectors: "object"
        tags: "object"

    # AWS CloudWatch Resource Schema
    CloudWatchResource:
      name: "aws_cloudwatch"
      description: "AWS CloudWatch service resource"
      provider: "aws"
      service: "cloudwatch"

      fields:
        # CloudWatch resources
        log_groups:
          type: "object"  # Dictionary/map of log_group_name -> log_group_data
          structure:
            log_group_name: "string"
            creation_time: "integer"
            retention_in_days: "integer"
            metric_filter_count: "integer"
            arn: "string"
            stored_bytes: "integer"
            kms_key_id: "string"
            tags: "object"
        log_streams: "object"  # Dictionary/map structure
        metrics: 
          type: "array"  # List of metric objects
          structure:
            namespace: "string"
            metric_name: "string"  
            dimensions: "array"
        alarms:
          type: "object"  # Dictionary/map of alarm_name -> alarm_data
          structure:
            alarm_name: "string"
            alarm_description: "string"
            actions_enabled: "boolean"
            ok_actions: "array"
            alarm_actions: "array"
            insufficient_data_actions: "array"
            state_value: "string"
            state_reason: "string"
            state_updated_timestamp: "string"
            metric_name: "string"
            namespace: "string"
            statistic: "string"
            dimensions: "array"
            period: "integer"
            evaluation_periods: "integer"
            threshold: "number"
            comparison_operator: "string"
            tags: "object"
        dashboards:
          type: "object"  # Dictionary/map of dashboard_name -> dashboard_data
          structure:
            dashboard_name: "string"
            dashboard_arn: "string"
            dashboard_body: "string"
            size: "integer"
            last_modified: "string"

  ResourceCollection:
    name: "aws_collection"
    description: "Collection of AWS resources from a single connector call"
    provider: "aws"
    collection_type: "AWSResource"

    # Define the structure for AWS resource collections
    fields:
      resources:
        - "aws.resources.EC2Resource"
        - "aws.resources.IAMResource"
        - "aws.resources.S3Resource"
        - "aws.resources.CloudTrailResource"
        - "aws.resources.CloudWatchResource"
      source_connector: "string"
      total_count: "integer"
      fetched_at: "string"
      collection_metadata:
        account_id: "string"
        regions: "array"
        services_collected: "array"
        collection_errors: "array"
      aws_api_metadata:
        collection_time: "string"
        api_version: "string"
        services: "array"
        regions_scanned: "array"
