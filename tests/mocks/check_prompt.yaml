checks:
- id: github_resource_ac_2_compliance
  name: github_resource_ac_2_compliance
  description: Verify compliance with NIST 800-53 AC-2 Account Management
  category: access_control
  output_statements:
    success: "Check passed: GitHub organization has proper account management with designated admins and controlled member access"
    failure: "Check failed: GitHub organization lacks proper account management - missing admin accounts or excessive admin privileges"
    partial: "Check partially passed: GitHub organization has some account management controls but needs improvement"
  fix_details:
    description: "Implement proper GitHub organization account management controls"
    instructions:
    - "Ensure at least one administrator account exists for the organization"
    - "Review and limit admin privileges to essential personnel only"
    - "Implement regular review of member access and roles"
    - "Document account management procedures for the organization"
    estimated_date: "2024-12-31"
    automation_available: false
  created_by: "system"
  updated_by: "system"
  is_deleted: false
  metadata:
    resource_type: GithubResource
    field_path: organization_data.members
    operation:
      name: custom
      logic: |
        # Check GitHub organization account management compliance
        result = False  # Default to non-compliant
        
        if fetched_value and isinstance(fetched_value, list):
            admin_count = sum(1 for member in fetched_value if member.get('role') == 'admin')
            member_count = len(fetched_value)
            
            # Account management compliance criteria
            has_admins = admin_count > 0
            reasonable_admin_ratio = admin_count / member_count <= 0.3 if member_count > 0 else False
            has_members = member_count > 0
            proper_roles = all(member.get('role') in ['admin', 'member'] for member in fetched_value)
            
            # Check all compliance criteria
            if has_admins and reasonable_admin_ratio and has_members and proper_roles:
                result = True
        elif fetched_value is None:
            # Handle case where organization members data doesn't exist
            result = False
    expected_value: null
    tags:
    - compliance
    - nist
    - ac
    - github_resource
    severity: high
    category: access_control
    control_ids:
    - 1